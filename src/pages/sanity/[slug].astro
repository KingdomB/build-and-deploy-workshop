---
import { fetch } from '../../utilities/sanity.js'
import Base from '../../layouts/Base/Base.astro'
import PortableText from '../../components/PortableText.svelte'

export async function getStaticPaths() {
  const query = '*[_type == "blogPost"]'
  const posts = await fetch(query)

  const paths = posts.map(post => {
    return {
      params: { slug: post.slug.current },
      props: {post}
    }
  })

  return paths
}

const { slug } = Astro.params
const { post } = Astro.props

let tags = []
if (post.tags) tags = post.tags.map(tag => tag.value)

// Prev/Next Page Links
const query = '*[_type == "blogPost"]'
const posts = await fetch(query)

// Sort the post here before finding the index
const postIndex = posts.findIndex(p => {
  return p._id === post._id
})

const previousPost = posts[postIndex -1]
const nextPost = posts[postIndex + 1]

const previousPostLink = previousPost
  ? `/sanity/${previousPost.slug.current}`
  : ''

const nextPostLink = nextPost
  ? `/sanity/${nextPost.slug.current}`
  : ''
---

<Base>
  <h1>{post.title}</h1>
  <p>Slug: {post.slug.current}</p>
  <p>Tags: {tags.map((tag, index) => {
    const link = `/tags/${tag}`
    const isLastItem = index === tags.length - 1

    if (isLastItem) {
      return (
        <a href={link}>{tag}</a>
      )
    }

    return (
      <a href={link}>{tag}</a>
      <span>, </span>
    )
  }


  )}</p>

  <PortableText value={post.body}></PortableText>

  <h2>Navigation</h2>


  {previousPostLink && (
    <p><a href={previousPostLink}>{previousPost.title}</a></p>
  )}

  {nextPostLink && (
    <p><a href={nextPostLink}>{nextPost.title}</a></p>
  )}
</Base>
